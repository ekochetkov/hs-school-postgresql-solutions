* Materialized path

  Для таблицы ~organization~ добавть колонку ~pth~ с типом ~int[]~

  Заполнить колонку ~path~ массивом ~id~ всех родительских отделений

** Входные данные

   Таблица огранизаций

   #+BEGIN_SRC sql
     select * from organization;
   #+END_SRC

   #+RESULTS:
   | id | parent | name              |
   |----+--------+-------------------|
   |  1 |        | ГКБ 1             |
   |  2 |        | ГКБ 2             |
   |  3 |      1 | Детское отделение |
   |  4 |      3 | Правое крыло      |
   |  5 |      4 | Кабинет педиатра  |
   |  6 |      2 | Хирургия          |
   |  7 |      6 | Кабинет 1         |
   |  8 |      6 | Кабинет 2         |
   |  9 |      6 | Кабинет 3         |

** Ожидаемый результат

   #+BEGIN_SRC sql
     select * from organization;
   #+END_SRC

   #+RESULTS:
   | id | parent | name              | pth     |
   |----+--------+-------------------+---------|
   |  1 |        | ГКБ 1             | {}      |
   |  2 |        | ГКБ 2             | {}      |
   |  3 |      1 | Детское отделение | {1}     |
   |  4 |      3 | Правое крыло      | {1,3}   |
   |  5 |      4 | Кабинет педиатра  | {1,3,4} |
   |  6 |      2 | Хирургия          | {2}     |
   |  7 |      6 | Кабинет 1         | {2,6}   |
   |  8 |      6 | Кабинет 2         | {2,6}   |
   |  9 |      6 | Кабинет 3         | {2,6}   |

** Решение

   #+BEGIN_SRC sql
     ALTER TABLE organization 
       ADD COLUMN pth int[];
       
    WITH RECURSIVE orgs AS
    (
      SELECT
        id,
        '{}'::int[] pth
      FROM
        organization
      WHERE
        parent IS NULL
        
      UNION
      
      SELECT
        o.id,
        orgs.pth || o.parent
      FROM
        orgs AS orgs
      JOIN organization AS o
        ON o.parent = orgs.id
    )

    UPDATE
      organization
    SET
      pth = orgs.pth
    FROM
      orgs
    WHERE
      orgs.id = organization.id;
   #+END_SRC   
